name: "release"

on:
  push:
    branches: [ master, develop ]

jobs:

  release:
    name: release
    runs-on: ubuntu-latest
    steps:

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch


    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ steps.extract_branch.outputs.branch }}

    - name: Get tag version
      run: |
        echo "tag_version=`awk '/^## \[[0-9]+/' CHANGELOG.md | awk 'NR==1 && -F"\[\]" {print $2}' 2>/dev/null | tail -c +2 | head -c -2`" >> $GITHUB_ENV

    - name: Check if tag is for develop and if it already exists
      run: |
        git fetch --prune --tags
        if [ ${{ steps.extract_branch.outputs.branch }} == 'develop' ]; then
            for i in {1..100}; do
                if [ `git tag --list | grep ${{ env.tag_version }}"-alpha.${i}" | wc -l` -eq 0 ]; then
                    tag_version=${{ env.tag_version }}"-alpha.${i}"
                    echo "tag_version=${tag_version}" >> $GITHUB_ENV
                    break;
                fi
            done
        elif [ `git tag --list | grep -q ${{ env.tag_version }}` -ne 0 ]; then exit 1; fi

    - name: Get changelog body
      id: get_changelog
      run: |
        release_body=$(cat << EOF
        $(awk '/^## \[[0-9]+/,EOF' CHANGELOG.md | awk '(NR>1)' | awk '1;/^## \[[0-9]+/{exit}' | sed '$d')
        EOF
        )
        release_body="${release_body//'%'/'%25'}"
        release_body="${release_body//$'\n'/'%0A'}"
        release_body="${release_body//$'\r'/'%0D'}"
        echo "::set-output name=RELEASE_BODY::$release_body"

    - name: Set pre-release boolean
      id: is_prerelease
      run: |
        prerelease=false
        if [ ${{ steps.extract_branch.outputs.branch }} == 'develop' ]; then
            prerelease=true
        fi
        echo "::set-output name=prerelease::$prerelease"

    - name: Create GitHub release
      if: ${{ steps.is_prerelease.outputs.prerelease == 'false' }} # Don't release or tag on alpha, as thinger will get the new tag as a version
      uses: ncipollo/release-action@v1
      with:
        prerelease: ${{ steps.is_prerelease.outputs.prerelease }}
        tag: ${{ env.tag_version }}
        name: ${{ env.tag_version }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ${{ steps.get_changelog.outputs.RELEASE_BODY }}



